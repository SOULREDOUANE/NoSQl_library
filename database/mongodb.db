1-- Books Collection

    {
      "_id": ObjectId,
      "title": String,
      "author_ids": [ObjectId],  // References to authors in Neo4j
      "isbn": String,
      "publication_date": Date,
      "copies_available": Number
    }

2-- Members Collection 

    {
      "_id": ObjectId,
      "name": String,
      "email": String,
      "address": String,
      "phone_number": String,
      "membership_date": Date
    }

3-- Loans Collection

    {
      "_id": ObjectId,
      "book_id": ObjectId,  // References to books in MongoDB
      "member_id": ObjectId,  // References to members in MongoDB
      "loan_date": Date,
      "return_date": Date,
      "status": String  // "on_loan", "returned"
    }


-----------mongosh script --------------


// library_setup.js
use library

// Create collections
db.createCollection("books")
db.createCollection("members")
db.createCollection("loans")

// Insert sample documents
db.books.insertOne({
   "title": "Example Book",
   "author_ids": [ObjectId("60d5f2d8a3e2c15b5e1b4f1c"), ObjectId("60d5f2d8a3e2c15b5e1b4f1d")],
   "isbn": "1234567890",
   "publication_date": new Date("2024-01-01"),
   "copies_available": 5
})

db.members.insertOne({
   "name": "John Doe",
   "email": "john.doe@example.com",
   "address": "123 Main St",
   "phone_number": "123-456-7890",
   "membership_date": new Date("2024-01-01")
})

db.loans.insertOne({
   "book_id": ObjectId("60d5f2d8a3e2c15b5e1b4f1e"),  // Replace with actual book ObjectId
   "member_id": ObjectId("60d5f2d8a3e2c15b5e1b4f1f"),  // Replace with actual member ObjectId
   "loan_date": new Date("2024-05-01"),
   "return_date": new Date("2024-05-15"),
   "status": "on_loan"
})